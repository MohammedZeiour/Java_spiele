package org.example;

import org.example.classes.GameBoard;
import org.example.classes.GameBoard.Figure;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        GameBoard board = new GameBoard(5, 5);
        Figure userFigure = new Figure(0, 0, 'X');
        Figure followerFigure = new Figure(4, 4, 'O');
        Figure targetField = new Figure(2, 2, 'T');
        board.setUserFigure(userFigure);
        board.setFollowerFigure(followerFigure);
        board.setTargetField(targetField);
        board.drawBoard();
        while (true) {
            board.moveUserFigure();
            board.moveFollowerFigure();
            board.drawBoard();
            if (board.hasUserReachedTarget()) {
                System.out.println("Congratulations, you reached the target field!");
                break;
            }
            if (userFigure.getRow() == followerFigure.getRow() && userFigure.getColumn() == followerFigure.getColumn()) {
                System.out.println("You have been caught by the follower figure!");
                break;
            }

            class GameBoard {
                private final int rows;
                private final int columns;
                private char[][] board;
                private Figure userFigure;
                private Figure followerFigure;

                private Figure targetField;
                private Scanner scanner;

                static class Figure {
                    private int row;
                    private int column;
                    private char symbol;

                    public Figure(int row, int column, char symbol) {
                        this.row = row;
                        this.column = column;
                        this.symbol = symbol;
                    }

                    public int getRow() {
                        return this.row;
                    }

                    public int getColumn() {
                        return this.column;
                    }

                    public char getSymbol() {
                        return this.symbol;
                    }

                    public void setPosition(int row, int column) {
                        this.row = row;
                        this.column = column;
                    }
                }


                public GameBoard(int rows, int columns) {
                    this.rows = rows;
                    this.columns = columns;
                    this.board = new char[rows][columns];
                    this.scanner = new Scanner(System.in);
                }

                public void setSquare(int row, int column, char value) {
                    this.board[row][column] = value;
                }

                public char getSquare(int row, int column) {
                    return this.board[row][column];
                }

                public void setUserFigure(Figure figure) {
                    this.userFigure = figure;
                }

                public Figure getUserFigure() {
                    return this.userFigure;
                }

                public void setFollowerFigure(Figure figure) {
                    this.followerFigure = figure;
                }

                public Figure getFollowerFigure() {
                    return this.followerFigure;
                }
                public void setTargetField(Figure figure) {
                    this.targetField = figure;
                }

                public Figure getTargetField() {
                    return this.targetField;
                }

                public boolean hasUserReachedTarget() {
                    int userRow = this.userFigure.getRow();
                    int userColumn = this.userFigure.getColumn();
                    int targetRow = this.targetField.getRow();
                    int targetColumn = this.targetField.getColumn();
                    return userRow == targetRow && userColumn == targetColumn;
                }

                public void moveUserFigure() {
                    System.out.print("Enter move (up, down, left, right): ");
                    String move = this.scanner.nextLine();
                    Figure userFigure = this.getUserFigure();
                    int row = userFigure.getRow();
                    int column = userFigure.getColumn();
                    if (move.equals("up")) {
                        row--;
                    } else if (move.equals("down")) {
                        row++;
                    } else if (move.equals("left")) {
                        column--;
                    } else if (move.equals("right")) {
                        column++;
                    }
                    userFigure.setPosition(row, column);
                }

                private int followerCounter = 0;
                public void moveFollowerFigure() {
                    Figure userFigure = this.getUserFigure();
                    Figure followerFigure = this.getFollowerFigure();
                    int userRow = userFigure.getRow();
                    int userColumn = userFigure.getColumn();
                    int followerRow = followerFigure.getRow();
                    int followerColumn = followerFigure.getColumn();
                    if (userRow < followerRow) {
                        followerRow--;
                    } else if (userRow > followerRow) {
                        followerRow++;
                    }
                    if (userColumn < followerColumn) {
                        followerColumn--;
                    } else if (userColumn > followerColumn) {
                        followerColumn++;
                    }
                    followerFigure.setPosition(followerRow, followerColumn);
                    followerCounter++;
                    if (followerCounter % 2 == 1) {
                        try {
                            Thread.sleep(500);
                        } catch (InterruptedException e) {
                            // handle exception
                        }
                    }
                }

                public void drawBoard() {
                    for (int i = 0; i < this.rows; i++) {
                        for (int j = 0; j < this.columns; j++) {
                            char square = this.getSquare(i, j);
                            if (square == 0) {
                                Figure userFigure = this.getUserFigure();
                                if (userFigure.getRow() == i && userFigure.getColumn() == j) {
                                    System.out.print(userFigure.getSymbol() + " ");
                                } else {
                                    Figure followerFigure = this.getFollowerFigure();
                                    if (followerFigure.getRow() == i && followerFigure.getColumn() == j) {
                                        System.out.print(followerFigure.getSymbol() + " ");
                                    } else {
                                        System.out.print("  ");
                                    }
                                }
                            } else {
                                System.out.print(square + " ");
                            }
                        }
                        System.out.println();
                    }
                }
            }


        }}}

